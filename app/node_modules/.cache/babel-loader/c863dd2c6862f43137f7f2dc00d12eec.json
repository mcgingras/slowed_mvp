{"ast":null,"code":"var _jsxFileName = \"/Users/mcgingras/Projects/slowed/app/src/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nclass Effect {\n  constructor(context) {\n    this.name = \"effect\";\n    this.context = context;\n    this.input = this.context.createGain();\n    this.effect = null;\n    this.bypassed = false;\n    this.output = this.context.createGain();\n    this.setup();\n    this.wireUp();\n  }\n\n  setup() {\n    this.effect = this.context.createGain();\n  }\n\n  wireUp() {\n    this.input.connect(this.effect);\n    this.effect.connect(this.output);\n  }\n\n  connect(destination) {\n    this.output.connect(destination);\n  }\n\n}\n\nclass Sample {\n  constructor(context) {\n    this.context = context;\n    this.buffer = this.context.createBufferSource();\n    this.buffer.start();\n    this.sampleBuffer = null;\n    this.rawBuffer = null;\n    this.loaded = false;\n    this.output = this.context.createGain();\n    this.output.gain.value = 1;\n  }\n\n  play() {\n    if (this.loaded) {\n      this.buffer = this.context.createBufferSource();\n      this.buffer.buffer = this.sampleBuffer;\n      this.buffer.connect(this.output);\n      this.buffer.start(this.context.currentTime);\n    }\n  }\n\n  connect(input) {\n    this.output.connect(input);\n  }\n\n  load(path) {\n    this.loaded = false;\n    return fetch(path).then(response => response.arrayBuffer()).then(myBlob => {\n      return new Promise((resolve, reject) => {\n        this.context.decodeAudioData(myBlob, resolve, reject);\n      });\n    }).then(buffer => {\n      this.sampleBuffer = buffer;\n      this.loaded = true;\n      return this;\n    });\n  }\n\n}\n\nclass AmpEnvelope {\n  constructor(context, gain = 1) {\n    this.context = context;\n    this.output = this.context.createGain();\n    this.output.gain.value = gain;\n    this.partials = [];\n    this.velocity = 0;\n    this.gain = gain;\n    this._attack = 0;\n    this._decay = 0.001;\n    this._sustain = this.output.gain.value;\n    this._release = 0.001;\n  }\n\n  on(velocity) {\n    this.velocity = velocity / 127;\n    this.start(this.context.currentTime);\n  }\n\n  off(MidiEvent) {\n    return this.stop(this.context.currentTime);\n  }\n\n  start(time) {\n    this.output.gain.value = 0;\n    this.output.gain.setValueAtTime(0, time);\n    this.output.gain.setTargetAtTime(1, time, this.attack + 0.00001);\n    this.output.gain.setTargetAtTime(this.sustain * this.velocity, time + this.attack, this.decay);\n  }\n\n  stop(time) {\n    this.sustain = this.output.gain.value;\n    this.output.gain.cancelScheduledValues(time);\n    this.output.gain.setValueAtTime(this.sustain, time);\n    this.output.gain.setTargetAtTime(0, time, this.release + 0.00001);\n  }\n\n  set attack(value) {\n    this._attack = value;\n  }\n\n  get attack() {\n    return this._attack;\n  }\n\n  set decay(value) {\n    this._decay = value;\n  }\n\n  get decay() {\n    return this._decay;\n  }\n\n  set sustain(value) {\n    this.gain = value; // this._sustain;\n  }\n\n  get sustain() {\n    return this.gain;\n  }\n\n  set release(value) {\n    this._release = value;\n  }\n\n  get release() {\n    return this._release;\n  }\n\n  connect(destination) {\n    this.output.connect(destination);\n  }\n\n}\n\nclass Voice {\n  constructor(context, type = \"sawtooth\", gain = 0.1) {\n    this.context = context;\n    this.type = type;\n    this.value = -1;\n    this.gain = gain;\n    this.output = this.context.createGain();\n    this.partials = [];\n    this.output.gain.value = this.gain;\n    this.ampEnvelope = new AmpEnvelope(this.context);\n    this.ampEnvelope.connect(this.output);\n  }\n\n  init() {\n    let osc = this.context.createOscillator();\n    osc.type = this.type;\n    osc.connect(this.ampEnvelope.output);\n    osc.start(this.context.currentTime);\n    this.partials.push(osc);\n  }\n\n  on(MidiEvent) {\n    this.value = MidiEvent.value;\n    this.partials.forEach(osc => {\n      osc.frequency.value = MidiEvent.frequency;\n    });\n    this.ampEnvelope.on(MidiEvent.velocity || MidiEvent);\n  }\n\n  off(MidiEvent) {\n    this.ampEnvelope.off(MidiEvent);\n    this.partials.forEach(osc => {\n      osc.stop(this.context.currentTime + this.ampEnvelope.release * 4);\n    });\n  }\n\n  connect(destination) {\n    this.output.connect(destination);\n  }\n\n  set detune(value) {\n    this.partials.forEach(p => p.detune.value = value);\n  }\n\n  set attack(value) {\n    this.ampEnvelope.attack = value;\n  }\n\n  get attack() {\n    return this.ampEnvelope.attack;\n  }\n\n  set decay(value) {\n    this.ampEnvelope.decay = value;\n  }\n\n  get decay() {\n    return this.ampEnvelope.decay;\n  }\n\n  set sustain(value) {\n    this.ampEnvelope.sustain = value;\n  }\n\n  get sustain() {\n    return this.ampEnvelope.sustain;\n  }\n\n  set release(value) {\n    this.ampEnvelope.release = value;\n  }\n\n  get release() {\n    return this.ampEnvelope.release;\n  }\n\n}\n\nclass Noise extends Voice {\n  constructor(context, gain) {\n    super(context, gain);\n    this._length = 2;\n  }\n\n  get length() {\n    return this._length || 2;\n  }\n\n  set length(value) {\n    this._length = value;\n  }\n\n  init() {\n    var lBuffer = new Float32Array(this.length * this.context.sampleRate);\n    var rBuffer = new Float32Array(this.length * this.context.sampleRate);\n\n    for (let i = 0; i < this.length * this.context.sampleRate; i++) {\n      lBuffer[i] = 1 - 2 * Math.random();\n      rBuffer[i] = 1 - 2 * Math.random();\n    }\n\n    let buffer = this.context.createBuffer(2, this.length * this.context.sampleRate, this.context.sampleRate);\n    buffer.copyToChannel(lBuffer, 0);\n    buffer.copyToChannel(rBuffer, 1);\n    let osc = this.context.createBufferSource();\n    osc.buffer = buffer;\n    osc.loop = true;\n    osc.loopStart = 0;\n    osc.loopEnd = 2;\n    osc.start(this.context.currentTime);\n    osc.connect(this.ampEnvelope.output);\n    this.partials.push(osc);\n  }\n\n  on(MidiEvent) {\n    this.value = MidiEvent.value;\n    this.ampEnvelope.on(MidiEvent.velocity || MidiEvent);\n  }\n\n}\n\nclass Filter extends Effect {\n  constructor(context, type = \"lowpass\", cutoff = 1000, resonance = 0.9) {\n    super(context);\n    this.name = \"filter\";\n    this.effect.frequency.value = cutoff;\n    this.effect.Q.value = resonance;\n    this.effect.type = type;\n  }\n\n  setup() {\n    this.effect = this.context.createBiquadFilter();\n    this.effect.connect(this.output);\n    this.wireUp();\n  }\n\n}\n\nvar OfflineAudioContext = window.OfflineAudioContext || window.webkitOfflineAudioContext;\n\nclass SimpleReverb extends Effect {\n  constructor(context) {\n    super(context);\n    this.name = \"SimpleReverb\";\n  }\n\n  setup(reverbTime = 1) {\n    this.effect = this.context.createConvolver();\n    this.reverbTime = reverbTime;\n    this.attack = 0.0001;\n    this.decay = 0.1;\n    this.release = reverbTime;\n    this.wet = this.context.createGain();\n    this.input.connect(this.wet);\n    this.wet.connect(this.effect);\n    this.effect.connect(this.output);\n    this.renderTail();\n  }\n\n  renderTail() {\n    console.log(\"renderTail\");\n    const tailContext = new OfflineAudioContext(2, this.context.sampleRate * this.reverbTime, this.context.sampleRate);\n\n    tailContext.oncomplete = buffer => {\n      this.effect.buffer = buffer.renderedBuffer;\n    };\n\n    const tailOsc = new Noise(tailContext, 1);\n    tailOsc.init();\n    tailOsc.connect(tailContext.destination);\n    tailOsc.attack = this.attack;\n    tailOsc.decay = this.decay;\n    tailOsc.release = this.release;\n    tailOsc.on({\n      frequency: 500,\n      velocity: 1\n    });\n    tailContext.startRendering();\n    setTimeout(() => {\n      tailOsc.off();\n    }, 1);\n  }\n\n  set decayTime(value) {\n    let dc = value / 3;\n    this.reverbTime = value;\n    this.release = dc;\n    return this.renderTail();\n  }\n\n}\n\nclass AdvancedReverb extends SimpleReverb {\n  constructor(context) {\n    super(context);\n    this.name = \"AdvancedReverb\";\n  }\n\n  setup(reverbTime = 1, preDelay = 0.03) {\n    this.effect = this.context.createConvolver();\n    this.reverbTime = reverbTime;\n    this.attack = 0.0001;\n    this.decay = 0.1;\n    this.release = reverbTime / 3;\n    this.preDelay = this.context.createDelay(reverbTime);\n    this.preDelay.delayTime.setValueAtTime(preDelay, this.context.currentTime);\n    this.multitap = [];\n\n    for (let i = 2; i > 0; i--) {\n      this.multitap.push(this.context.createDelay(reverbTime));\n    }\n\n    this.multitap.map((t, i) => {\n      if (this.multitap[i + 1]) {\n        t.connect(this.multitap[i + 1]);\n      }\n\n      t.delayTime.setValueAtTime(0.001 + i * (preDelay / 2), this.context.currentTime);\n    });\n    this.multitapGain = this.context.createGain();\n    this.multitap[this.multitap.length - 1].connect(this.multitapGain);\n    this.multitapGain.gain.value = 0.2;\n    this.multitapGain.connect(this.output);\n    this.wet = this.context.createGain();\n    this.input.connect(this.wet);\n    this.wet.connect(this.preDelay);\n    this.wet.connect(this.multitap[0]);\n    this.preDelay.connect(this.effect);\n    this.effect.connect(this.output);\n  }\n\n  renderTail() {\n    const tailContext = new OfflineAudioContext(2, this.context.sampleRate * this.reverbTime, this.context.sampleRate);\n\n    tailContext.oncomplete = buffer => {\n      this.effect.buffer = buffer.renderedBuffer;\n    };\n\n    const tailOsc = new Noise(tailContext, 1);\n    const tailLPFilter = new Filter(tailContext, \"lowpass\", 5000, 1);\n    const tailHPFilter = new Filter(tailContext, \"highpass\", 500, 1);\n    tailOsc.init();\n    tailOsc.connect(tailHPFilter.input);\n    tailHPFilter.connect(tailLPFilter.input);\n    tailLPFilter.connect(tailContext.destination);\n    tailOsc.attack = this.attack;\n    tailOsc.decay = this.decay;\n    tailOsc.release = this.release;\n    tailContext.startRendering();\n    tailOsc.on({\n      frequency: 500,\n      velocity: 1\n    });\n    setTimeout(() => {\n      tailOsc.off();\n    }, 1);\n  }\n\n  set decayTime(value) {\n    let dc = value / 3;\n    this.reverbTime = value;\n    this.release = dc;\n    this.renderTail();\n  }\n\n}\n\nlet Audio = new (window.AudioContext || window.webkitAudioContext)();\nlet filter = new Filter(Audio, \"lowpass\", 50000, 0.8);\nfilter.setup();\nlet verb = new SimpleReverb(Audio);\nverb.decayTime = 0.8;\nverb.wet.gain.value = 2;\nlet compressor = Audio.createDynamicsCompressor();\ncompressor.threshold.setValueAtTime(-24, Audio.currentTime);\ncompressor.knee.setValueAtTime(40, Audio.currentTime);\ncompressor.ratio.setValueAtTime(12, Audio.currentTime);\ncompressor.attack.setValueAtTime(0, Audio.currentTime);\ncompressor.release.setValueAtTime(0.25, Audio.currentTime);\ncompressor.connect(Audio.destination);\nfilter.connect(verb.input);\nverb.connect(compressor); // let drySound = new Sample(Audio);\n// drySound.load(\"https://mwmwmw.github.io/files/Instruments/DrumBeat.mp3\").then((s) => {\n//     drySound.connect(compressor);\n// });\n// let wetSound = new Sample(Audio);\n// wetSound.load(\"https://mwmwmw.github.io/files/Instruments/DrumBeat.mp3\").then((s) => {\n//     wetSound.connect(filter.input);\n// });\n// let combined = new Sample(Audio);\n// combined.load(\"https://mwmwmw.github.io/files/Instruments/DrumBeat.mp3\").then((s) => {\n//     combined.connect(filter.input);\n//     combined.connect(compressor);\n// });\n// document.getElementById(\"dry\").addEventListener(\"mousedown\",(e)=>{\n// });\n// document.getElementById(\"wet\").addEventListener(\"mousedown\",(e)=>{\n//   wetSound.play();\n// })\n// document.getElementById(\"combined\").addEventListener(\"mousedown\",(e)=>{\n//   combined.play();\n// })\n\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    // Update debounced value after delay\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay); // Cancel the timeout if value changes (also on delay change or unmount)\n    // This is how we prevent debounced value from updating if value is changed ...\n    // .. within the delay period. Timeout gets cleared and restarted.\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay] // Only re-call effect if value or delay changes\n  );\n  return debouncedValue;\n}\n\nfunction App() {\n  const [token, setToken] = useState('');\n  const [isLoggedIn, setLoggedIn] = useState(false);\n  const [query, setQuery] = useState('');\n  const [tracks, setTracks] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const debouncedQuery = useDebounce(query, 500);\n  const [activeSong, setActiveSong] = useState(null);\n  const [sound, setSound] = useState(null);\n  const [speed, setSpeed] = useState(1); // fetch the Spotify API token from the URL params.\n\n  useEffect(() => {\n    let urlstring = window.location.href;\n    let url = new URL(urlstring);\n    let c = url.searchParams.get('access_token');\n\n    if (c) {\n      setLoggedIn(true);\n      setToken(c);\n    }\n  }, []);\n\n  const searchSpotify = q => {\n    return fetch(`https://api.spotify.com/v1/search/?q=${q}&type=track`, {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`\n      })\n    }).then(res => res.json());\n  }; // Effect for API call \n\n\n  useEffect(() => {\n    if (debouncedQuery) {\n      setIsSearching(true);\n      searchSpotify(debouncedQuery).then(results => {\n        setIsSearching(false);\n        console.log(results.tracks.items);\n        setTracks(results.tracks.items);\n      });\n    } else {\n      setTracks([]);\n    }\n  }, [debouncedQuery] // Only call effect if debounced search term changes\n  );\n\n  const playSong = () => {\n    console.log(activeSong);\n    console.log(activeSong.preview_url);\n    let s = new Sample(Audio);\n    s.load(activeSong.preview_url).then(s => {\n      s.connect(filter.input);\n    });\n    setSound(s);\n  };\n\n  const changeSpeed = e => {\n    setSpeed(e.target.value);\n    sound.buffer.playbackRate.value = speed;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-2xl font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 9\n    }\n  }, \"SPOTIFY SLOWED\")), !isLoggedIn ? /*#__PURE__*/React.createElement(\"a\", {\n    href: \"http://localhost:8888/login\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 574,\n      columnNumber: 22\n    }\n  }, \"login\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid grid-cols-4 gap-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 576,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"border mt-2 w-64\",\n    type: \"text\",\n    placeholder: \"Search Spotify\",\n    onChange: e => setQuery(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 577,\n      columnNumber: 13\n    }\n  }), isSearching && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 583,\n      columnNumber: 29\n    }\n  }, \"Searching ...\"), tracks.map(result => /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setActiveSong(result),\n    key: result.id,\n    className: \"hover:bg-gray-200 w-64\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 586,\n      columnNumber: 17\n    }\n  }, result.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"border col-span-3 mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 11\n    }\n  }, activeSong && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 592,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `${activeSong.album.images[0].url}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 593,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      playSong();\n    },\n    className: \"bg-gray-300 text-gray-800 mt-2 p-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 17\n    }\n  }, \"Play\"), /*#__PURE__*/React.createElement(\"input\", {\n    onChange: e => {\n      changeSpeed(e);\n    },\n    type: \"range\",\n    min: \".3\",\n    max: \"2\",\n    step: \".1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 595,\n      columnNumber: 17\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/mcgingras/Projects/slowed/app/src/App.js"],"names":["React","useState","useEffect","Effect","constructor","context","name","input","createGain","effect","bypassed","output","setup","wireUp","connect","destination","Sample","buffer","createBufferSource","start","sampleBuffer","rawBuffer","loaded","gain","value","play","currentTime","load","path","fetch","then","response","arrayBuffer","myBlob","Promise","resolve","reject","decodeAudioData","AmpEnvelope","partials","velocity","_attack","_decay","_sustain","_release","on","off","MidiEvent","stop","time","setValueAtTime","setTargetAtTime","attack","sustain","decay","cancelScheduledValues","release","Voice","type","ampEnvelope","init","osc","createOscillator","push","forEach","frequency","detune","p","Noise","_length","length","lBuffer","Float32Array","sampleRate","rBuffer","i","Math","random","createBuffer","copyToChannel","loop","loopStart","loopEnd","Filter","cutoff","resonance","Q","createBiquadFilter","OfflineAudioContext","window","webkitOfflineAudioContext","SimpleReverb","reverbTime","createConvolver","wet","renderTail","console","log","tailContext","oncomplete","renderedBuffer","tailOsc","startRendering","setTimeout","decayTime","dc","AdvancedReverb","preDelay","createDelay","delayTime","multitap","map","t","multitapGain","tailLPFilter","tailHPFilter","Audio","AudioContext","webkitAudioContext","filter","verb","compressor","createDynamicsCompressor","threshold","knee","ratio","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","App","token","setToken","isLoggedIn","setLoggedIn","query","setQuery","tracks","setTracks","isSearching","setIsSearching","debouncedQuery","activeSong","setActiveSong","sound","setSound","speed","setSpeed","urlstring","location","href","url","URL","c","searchParams","get","searchSpotify","q","method","headers","Headers","res","json","results","items","playSong","preview_url","s","changeSpeed","e","target","playbackRate","result","id","album","images"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nclass Effect {\n\n  constructor(context) {\n    this.name = \"effect\";\n    this.context = context;\n    this.input = this.context.createGain();\n    this.effect = null;\n    this.bypassed = false;\n    this.output = this.context.createGain();\n    this.setup();\n    this.wireUp();\n  }\n\n  setup() {\n    this.effect = this.context.createGain();\n  }\n\n  wireUp() {\n    this.input.connect(this.effect);\n    this.effect.connect(this.output);\n  }\n\n  connect(destination) {\n    this.output.connect(destination);\n  }\n\n}\n\nclass Sample {\n  constructor(context) {\n    this.context = context;\n    this.buffer = this.context.createBufferSource();\n    this.buffer.start();\n    this.sampleBuffer = null\n    this.rawBuffer = null;\n    this.loaded = false;\n    this.output = this.context.createGain();\n    this.output.gain.value = 1;\n  }\n\n  play() {\n    if (this.loaded) {\n      this.buffer = this.context.createBufferSource();\n      this.buffer.buffer = this.sampleBuffer;\n      this.buffer.connect(this.output);\n      this.buffer.start(this.context.currentTime);\n    }\n  }\n\n  connect(input) {\n    this.output.connect(input);\n  }\n\n  load(path) {\n    this.loaded = false;\n    return fetch(path)\n      .then((response) => response.arrayBuffer())\n      .then((myBlob) => {\n        return new Promise((resolve, reject) => {\n          this.context.decodeAudioData(myBlob, resolve, reject);\n        })\n      })\n      .then((buffer) => {\n        this.sampleBuffer = buffer;\n        this.loaded = true;\n        return this;\n      })\n  }\n}\n\n\nclass AmpEnvelope {\n  constructor(context, gain = 1) {\n    this.context = context;\n    this.output = this.context.createGain();\n    this.output.gain.value = gain;\n    this.partials = [];\n    this.velocity = 0;\n    this.gain = gain;\n    this._attack = 0;\n    this._decay = 0.001;\n    this._sustain = this.output.gain.value;\n    this._release = 0.001;\n  }\n\n  on(velocity) {\n    this.velocity = velocity / 127;\n    this.start(this.context.currentTime);\n  }\n\n  off(MidiEvent) {\n    return this.stop(this.context.currentTime);\n  }\n\n  start(time) {\n    this.output.gain.value = 0;\n    this.output.gain.setValueAtTime(0, time);\n    this.output.gain.setTargetAtTime(1, time, this.attack + 0.00001);\n    this.output.gain.setTargetAtTime(this.sustain * this.velocity, time + this.attack, this.decay);\n  }\n\n  stop(time) {\n    this.sustain = this.output.gain.value;\n    this.output.gain.cancelScheduledValues(time);\n    this.output.gain.setValueAtTime(this.sustain, time);\n    this.output.gain.setTargetAtTime(0, time, this.release + 0.00001);\n  }\n\n  set attack(value) {\n    this._attack = value;\n  }\n\n  get attack() {\n    return this._attack\n  }\n\n  set decay(value) {\n    this._decay = value;\n  }\n\n  get decay() {\n    return this._decay;\n  }\n\n  set sustain(value) {\n    this.gain = value;\n    // this._sustain;\n  }\n\n  get sustain() {\n    return this.gain;\n  }\n\n  set release(value) {\n    this._release = value;\n  }\n\n  get release() {\n    return this._release;\n  }\n\n  connect(destination) {\n    this.output.connect(destination);\n  }\n}\n\nclass Voice {\n  constructor(context, type = \"sawtooth\", gain = 0.1) {\n    this.context = context;\n    this.type = type;\n    this.value = -1;\n    this.gain = gain;\n    this.output = this.context.createGain();\n    this.partials = [];\n    this.output.gain.value = this.gain;\n    this.ampEnvelope = new AmpEnvelope(this.context);\n    this.ampEnvelope.connect(this.output);\n  }\n\n  init() {\n    let osc = this.context.createOscillator();\n    osc.type = this.type;\n    osc.connect(this.ampEnvelope.output);\n    osc.start(this.context.currentTime);\n    this.partials.push(osc);\n  }\n\n  on(MidiEvent) {\n    this.value = MidiEvent.value;\n    this.partials.forEach((osc) => {\n      osc.frequency.value = MidiEvent.frequency;\n    });\n    this.ampEnvelope.on(MidiEvent.velocity || MidiEvent);\n  }\n\n  off(MidiEvent) {\n    this.ampEnvelope.off(MidiEvent);\n    this.partials.forEach((osc) => {\n      osc.stop(this.context.currentTime + this.ampEnvelope.release * 4);\n    });\n  }\n\n  connect(destination) {\n    this.output.connect(destination);\n  }\n\n  set detune(value) {\n    this.partials.forEach(p => p.detune.value = value);\n  }\n\n  set attack(value) {\n    this.ampEnvelope.attack = value;\n  }\n\n  get attack() {\n    return this.ampEnvelope.attack;\n  }\n\n  set decay(value) {\n    this.ampEnvelope.decay = value;\n  }\n\n  get decay() {\n    return this.ampEnvelope.decay;\n  }\n\n  set sustain(value) {\n    this.ampEnvelope.sustain = value;\n  }\n\n  get sustain() {\n    return this.ampEnvelope.sustain;\n  }\n\n  set release(value) {\n    this.ampEnvelope.release = value;\n  }\n\n  get release() {\n    return this.ampEnvelope.release;\n  }\n\n}\nclass Noise extends Voice {\n  constructor(context, gain) {\n    super(context, gain);\n    this._length = 2;\n  }\n\n  get length() {\n    return this._length || 2;\n  }\n  set length(value) {\n    this._length = value;\n  }\n\n  init() {\n    var lBuffer = new Float32Array(this.length * this.context.sampleRate);\n    var rBuffer = new Float32Array(this.length * this.context.sampleRate);\n    for (let i = 0; i < this.length * this.context.sampleRate; i++) {\n      lBuffer[i] = 1 - (2 * Math.random());\n      rBuffer[i] = 1 - (2 * Math.random());\n    }\n    let buffer = this.context.createBuffer(2, this.length * this.context.sampleRate, this.context.sampleRate);\n    buffer.copyToChannel(lBuffer, 0);\n    buffer.copyToChannel(rBuffer, 1);\n\n    let osc = this.context.createBufferSource();\n    osc.buffer = buffer;\n    osc.loop = true;\n    osc.loopStart = 0;\n    osc.loopEnd = 2;\n    osc.start(this.context.currentTime);\n    osc.connect(this.ampEnvelope.output);\n    this.partials.push(osc);\n  }\n\n  on(MidiEvent) {\n    this.value = MidiEvent.value;\n    this.ampEnvelope.on(MidiEvent.velocity || MidiEvent);\n  }\n\n}\n\nclass Filter extends Effect {\n  constructor(context, type = \"lowpass\", cutoff = 1000, resonance = 0.9) {\n    super(context);\n    this.name = \"filter\";\n    this.effect.frequency.value = cutoff;\n    this.effect.Q.value = resonance;\n    this.effect.type = type;\n  }\n\n  setup() {\n    this.effect = this.context.createBiquadFilter();\n    this.effect.connect(this.output);\n    this.wireUp();\n  }\n\n}\n\nvar OfflineAudioContext = window.OfflineAudioContext || window.webkitOfflineAudioContext;\nclass SimpleReverb extends Effect {\n  constructor(context) {\n    super(context);\n    this.name = \"SimpleReverb\";\n  }\n\n  setup(reverbTime = 1) {\n    this.effect = this.context.createConvolver();\n\n    this.reverbTime = reverbTime;\n\n    this.attack = 0.0001;\n    this.decay = 0.1;\n    this.release = reverbTime;\n\n    this.wet = this.context.createGain();\n    this.input.connect(this.wet);\n    this.wet.connect(this.effect);\n    this.effect.connect(this.output);\n\n    this.renderTail();\n  }\n\n  renderTail() {\n    console.log(\"renderTail\")\n    const tailContext = new OfflineAudioContext(2, this.context.sampleRate * this.reverbTime, this.context.sampleRate);\n    tailContext.oncomplete = (buffer) => {\n      this.effect.buffer = buffer.renderedBuffer;\n    }\n\n    const tailOsc = new Noise(tailContext, 1);\n    tailOsc.init();\n    tailOsc.connect(tailContext.destination);\n    tailOsc.attack = this.attack;\n    tailOsc.decay = this.decay;\n    tailOsc.release = this.release;\n\n\n    tailOsc.on({ frequency: 500, velocity: 1 });\n    tailContext.startRendering();\n    setTimeout(() => {\n      tailOsc.off();\n    }, 1);\n\n\n  }\n\n  set decayTime(value) {\n    let dc = value / 3;\n    this.reverbTime = value;\n    this.release = dc;\n    return this.renderTail();\n  }\n\n}\n\nclass AdvancedReverb extends SimpleReverb {\n  constructor(context) {\n    super(context);\n    this.name = \"AdvancedReverb\";\n  }\n\n  setup(reverbTime = 1, preDelay = 0.03) {\n    this.effect = this.context.createConvolver();\n\n    this.reverbTime = reverbTime;\n\n    this.attack = 0.0001;\n    this.decay = 0.1;\n    this.release = reverbTime / 3;\n\n    this.preDelay = this.context.createDelay(reverbTime);\n    this.preDelay.delayTime.setValueAtTime(preDelay, this.context.currentTime);\n\n    this.multitap = [];\n\n    for (let i = 2; i > 0; i--) {\n      this.multitap.push(this.context.createDelay(reverbTime));\n    }\n    this.multitap.map((t, i) => {\n      if (this.multitap[i + 1]) {\n        t.connect(this.multitap[i + 1])\n      }\n      t.delayTime.setValueAtTime(0.001 + (i * (preDelay / 2)), this.context.currentTime);\n    })\n\n    this.multitapGain = this.context.createGain();\n    this.multitap[this.multitap.length - 1].connect(this.multitapGain);\n\n    this.multitapGain.gain.value = 0.2;\n\n    this.multitapGain.connect(this.output);\n\n    this.wet = this.context.createGain();\n\n    this.input.connect(this.wet);\n    this.wet.connect(this.preDelay);\n    this.wet.connect(this.multitap[0]);\n    this.preDelay.connect(this.effect);\n    this.effect.connect(this.output);\n\n  }\n  renderTail() {\n\n    const tailContext = new OfflineAudioContext(2, this.context.sampleRate * this.reverbTime, this.context.sampleRate);\n    tailContext.oncomplete = (buffer) => {\n      this.effect.buffer = buffer.renderedBuffer;\n    }\n    const tailOsc = new Noise(tailContext, 1);\n    const tailLPFilter = new Filter(tailContext, \"lowpass\", 5000, 1);\n    const tailHPFilter = new Filter(tailContext, \"highpass\", 500, 1);\n\n    tailOsc.init();\n    tailOsc.connect(tailHPFilter.input);\n    tailHPFilter.connect(tailLPFilter.input);\n    tailLPFilter.connect(tailContext.destination);\n    tailOsc.attack = this.attack;\n    tailOsc.decay = this.decay;\n    tailOsc.release = this.release;\n\n    tailContext.startRendering()\n\n    tailOsc.on({ frequency: 500, velocity: 1 });\n    setTimeout(() => {\n      tailOsc.off();\n    }, 1)\n  }\n\n  set decayTime(value) {\n    let dc = value / 3;\n    this.reverbTime = value;\n    this.release = dc;\n    this.renderTail();\n  }\n}\n\n\nlet Audio = new (window.AudioContext || window.webkitAudioContext)();\n\nlet filter = new Filter(Audio, \"lowpass\", 50000, 0.8);\nfilter.setup();\nlet verb = new SimpleReverb(Audio);\nverb.decayTime = 0.8;\nverb.wet.gain.value = 2;\n\n\nlet compressor = Audio.createDynamicsCompressor();\ncompressor.threshold.setValueAtTime(-24, Audio.currentTime);\ncompressor.knee.setValueAtTime(40, Audio.currentTime);\ncompressor.ratio.setValueAtTime(12, Audio.currentTime);\ncompressor.attack.setValueAtTime(0, Audio.currentTime);\ncompressor.release.setValueAtTime(0.25, Audio.currentTime);\ncompressor.connect(Audio.destination);\n\nfilter.connect(verb.input);\nverb.connect(compressor);\n\n\n// let drySound = new Sample(Audio);\n// drySound.load(\"https://mwmwmw.github.io/files/Instruments/DrumBeat.mp3\").then((s) => {\n//     drySound.connect(compressor);\n// });\n\n// let wetSound = new Sample(Audio);\n// wetSound.load(\"https://mwmwmw.github.io/files/Instruments/DrumBeat.mp3\").then((s) => {\n//     wetSound.connect(filter.input);\n// });\n\n// let combined = new Sample(Audio);\n// combined.load(\"https://mwmwmw.github.io/files/Instruments/DrumBeat.mp3\").then((s) => {\n//     combined.connect(filter.input);\n//     combined.connect(compressor);\n// });\n\n\n\n\n// document.getElementById(\"dry\").addEventListener(\"mousedown\",(e)=>{\n\n// });\n// document.getElementById(\"wet\").addEventListener(\"mousedown\",(e)=>{\n//   wetSound.play();\n// })\n// document.getElementById(\"combined\").addEventListener(\"mousedown\",(e)=>{\n//   combined.play();\n// })\n\nfunction useDebounce(value, delay) {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay] // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n\n\nfunction App() {\n\n  const [token, setToken] = useState('');\n  const [isLoggedIn, setLoggedIn] = useState(false);\n\n  const [query, setQuery] = useState('');\n  const [tracks, setTracks] = useState([])\n  const [isSearching, setIsSearching] = useState(false);\n  const debouncedQuery = useDebounce(query, 500);\n\n  const [activeSong, setActiveSong] = useState(null);\n  const [sound, setSound] = useState(null);\n  const [speed, setSpeed] = useState(1);\n\n  // fetch the Spotify API token from the URL params.\n  useEffect(() => {\n    let urlstring = window.location.href;\n    let url = new URL(urlstring);\n    let c = url.searchParams.get('access_token');\n\n\n    if (c) {\n      setLoggedIn(true);\n      setToken(c);\n    }\n  }, [])\n\n  const searchSpotify = (q) => {\n    return fetch(`https://api.spotify.com/v1/search/?q=${q}&type=track`, {\n      method: 'GET',\n      headers: new Headers({\n        'Authorization': `Bearer ${token}`,\n      }),\n    })\n      .then(res => res.json())\n  }\n\n  // Effect for API call \n  useEffect(\n    () => {\n      if (debouncedQuery) {\n        setIsSearching(true);\n        searchSpotify(debouncedQuery).then(results => {\n          setIsSearching(false);\n          console.log(results.tracks.items)\n          setTracks(results.tracks.items);\n        });\n      } else {\n        setTracks([]);\n      }\n    },\n    [debouncedQuery] // Only call effect if debounced search term changes\n  );\n\n  const playSong = () => {\n    console.log(activeSong);\n    console.log(activeSong.preview_url);\n    let s = new Sample(Audio);\n    s.load(activeSong.preview_url).then((s) => {\n      s.connect(filter.input);\n    });\n    setSound(s);\n  }\n\n  const changeSpeed = (e) => {\n    setSpeed(e.target.value)\n    sound.buffer.playbackRate.value = speed;\n  }\n\n\n\n  return (\n    <div className=\"container mx-auto\">\n      <div>\n        <h1 className=\"text-2xl font-bold\">SPOTIFY SLOWED</h1>\n      </div>\n      {!isLoggedIn ? <a href=\"http://localhost:8888/login\">login</a> :\n        <div className=\"grid grid-cols-4 gap-4\">\n          <div>\n            <input\n              className=\"border mt-2 w-64\"\n              type=\"text\"\n              placeholder=\"Search Spotify\"\n              onChange={e => setQuery(e.target.value)}\n            />\n            {isSearching && <div>Searching ...</div>}\n            {tracks.map(result => (\n              <div onClick={() => setActiveSong(result)} key={result.id} className=\"hover:bg-gray-200 w-64\">\n                <h4>{result.name}</h4>\n              </div>\n            ))}\n          </div>\n          <div className=\"border col-span-3 mt-2\">\n            {activeSong &&\n              <div>\n                <img src={`${activeSong.album.images[0].url}`} />\n                <button onClick={() => { playSong() }} className=\"bg-gray-300 text-gray-800 mt-2 p-4\">Play</button>\n                <input onChange={(e) => { changeSpeed(e) }} type=\"range\" min=\".3\" max=\"2\" step=\".1\" />\n              </div>\n            }\n          </div>\n        </div>\n      }\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}